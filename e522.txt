  I treated the floor wiring scheme as a directed graph, with exactly one out-going edge from each node, and no edges from a node to itself. To 'fix' a wiring configuration, one must convert the graph into a single cycle. In general, two problems must be resolved.
 The first is what I term 'orphan nodes' those with no edges pointing to them. Equivalently, orphan nodes correspond to an excess of incoming edges for other nodes, or more than one wire pointing to a floor.
 The second problem is sub-cycles in the graph. For example, if 1 points to 2, 2 to 1, 3 to 4, and 4 to 3, although no floor recieves more than one wire, the wiring graph is disconnected.
 To resolve these problems, each orphan node must recieve an incoming edge, and each cycle must be broken. Cycles that contain nodes with multiple incoming edges can be broken while simultaneously helping an orphan node. The problem reduces to counting the number of cycles for which each member node has no extra incoming edges, plus the number of orphans. These can be obtained by the formulae in the previous posts, using an expected value sort of approach. We can model the appearance of orphans and cycles as independant. (This sort of reminds me of 493).
